-- 1)	Find out the names of all the clients.

SELECT name FROM client_master;
----
-- 2)	Print the entire client_master table.

SELECT * FROM client_master;
----
-- 3)	Retrieve the list of names and the cities of all the clients

SELECT name,city FROM client_master;
----
-- 4)	List the various products available from the product_master table.

SELECT * FROM product_master;
----
-- 5)	Find the names of all clients having ‘a’ as the second letter in their table.

SELECT name FROM client_master WHERE name LIKE '%a%';
----
-- 6)	Find the names of all clients who stay in a city whose second letter is ‘a’

SELECT name FROM client_master WHERE city LIKE '%a%';
----
-- 7)	Find out the clients who stay in a city ‘Bombay’ or city ‘Delhi’ or city ‘Madras’.
SELECT * FROM client_master WHERE city IN('Bombay','Delhi','Madras');
----
-- 8)	List all the clients who are located in Bombay.

SELECT * FROM client_master WHERE city='Bombay';
----
-- 9)	Print the list of clients whose bal_due are greater than value 10000

SELECT * FROM client_master WHERE bal_due>10000;
----
-- 10)	Print the information from sales_order table of orders placed in the month of January.

SELECT * FROM sales_order WHERE EXTRACT (MONTH FROM s_order_date)=1;
----
-- 11)	Display the order information for client_no ‘C00001’ and ‘C00002’

SELECT * FROM sales_order WHERE client_no IN ('C00001','C00002');
----
-- 12)	Find the products with description as ‘1.44 Drive’ and ‘1.22 Drive’

SELECT * FROM product_master WHERE description IN ('1.44 Drive','1.22 Drive');
----
-- 13)	Find the products whose selling price is greater than 2000 and less than or equal to 5000

SELECT * FROM product_master WHERE sell_price >2000 and sell_price<=5000;
----
-- 14)	Find the products whose selling price is more than 1500 and also find the new selling price as original selling price * 15

SELECT * , (sell_price * 15) AS new_sp FROM product_master WHERE sell_price > 1500;
----
-- 15)	Rename the new column in the above query as new_price

SELECT * , (sell_price * 15) AS new_price FROM product_master WHERE sell_price > 1500;
----
-- 16)	Find the products whose cost price is less than 1500

SELECT * FROM product_master WHERE cost_price<1500;
----
-- 17)	List the products in sorted order of their description.

SELECT * FROM product_master ORDER BY description;
----
-- 18)	Calculate the square root the price of each product.

SELECT SQRT(sell_price) FROM product_master;
----
-- 19)	Divide the cost of product ‘540 HDD’ by difference between its price and 100

SELECT sell_price / (sell_price - 100) FROM product_master WHERE description = '540 HDD';
----
-- 20)	List the names, city and state of clients not in the state of Maharashtra

SELECT name,city,state FROM client_master WHERE state!='Maharashtra';
----
-- 21)	List the product_no, description, sell_price of products whose description begin with letter ‘M’

SELECT product_no,description,sell_price WHERE description LIKE 'M%';
----
-- 22)	List all the orders that were canceled in the month of May.

SELECT * FROM sales_order WHERE EXTRACT(MONTH FROM dely_date)=5 AND order_status= 'Canceled';
----
--23--
-- Count the total number of orders

SELECT COUNT(s_order_no) FROM sales_order;
----
-- 24)	Calculate the average price of all the products

SELECT AVG(sell_price) FROM product_master;
----
-- 25)	Calculate the minimum price of products.

SELECT MIN(sell_price) FROM product_master;
----
--26--
-- Determine the maximum and minimum product prices. Rename the title as max_price and min_price respectively

SELECT MAX(sell_price) AS max_price, MIN(sell_price) AS min_price FROM product_master;
----
--27--
-- Count the number of products having price greater than or equal to 1500

SELECT sell_price, COUNT(sell_price) FROM product_master WHERE sell_price >= 1500;
----
--28--
-- 28)	Find all the products whose qty_on_hand is less than reorder level

SELECT * FROM product_master WHERE qty_on_hand < record_lvl;
----
--29--
-- 29)	Print the information of client_master, product_master, sales_order table in the following formate for all the records
{cust_name} has placed order {order_no} on {s_order_date}

SELECT c.name || ' has placed order ' || s.s_order_no || ' on ' || s.s_order_date FROM client_master c INNER JOIN sales_order s WHERE  c. client_no = s.client_no;
----
--30--
-- 30)	Print the description and total qty sold for each product

SELECT p.description, SUM(s.qty_ordered) FROM product_master p INNER JOIN sales_order_details s WHERE p.product_no = s.product_no GROUP BY p.product_no;
----
--31--
-- 31)	Find the value of each product sold

SELECT DISTINCT product_no, product_rate FROM sales_order_details;
----
--32--
-- 32)	Calculate the average qty sold for each client that has a maximum order value of 15000.00

SELECT DISTINCT s.client_no, AVG(d.qty_ordered) FROM sales_order s INNER JOIN sales_order_details d WHERE s.s_order_no = d.s_order_no GROUP BY s.client_no HAVING d.qty_ordered * d.product_rate <= 15000;
----
-- 33)	Find out the total sales amount receivable for the month of jan. it will be the sum total of all the billed orders for the month

SELECT SUM(qty_ordered * product_rate) AS total_sales_amt FROM sales_order_details WHERE s_order_no IN (SELECT s_order_no FROM sales_order WHERE billed_yn = 'Y');
----
-- 35) Print the information of product_master, order_detail table in the following format for all the records {Description} worth Rs. {Total sales for the product} was produced in the month of {s_order_date} in month formate.

SELECT Description|| ' worth Rs.'||sum(qty_disp*product_rate) || ' was produced in the month of '|| to_char(s_order_date,'Month')
FROM client_master, sales_order, sales_order_details, product_master
WHERE client_master.client_no = sales_order.client_no AND product_master.product_no = sales_order_details.product_no AND
sales_order.s_order_no = sales_order_details.s_order_no
GROUP BY description, s_order_date;
----
--36) Find the product_no and description of non-moving products.

SELECT product_no , description FROM product_master WHERE product_no IN
    (SELECT product_no FROM sales_order_details WHERE s_order_no IN
    (SELECT s_order_no FROM sales_order WHERE order_status='IP') 
);
----
--37) Find the customer name, address1, address2, city and pin code for the client who has placed order no ‘O19001’

SELECT name, city, pincode FROM Client_master WHERE client_no IN(
SELECT client_no FROM sales_order WHERE s_order_no ='O19001');
----
--38) Find the client names who have placed orders before the month of May, 1996

SELECT*FROM client_master WHERE client_no IN(
SELECT client_no FROM sales_order WHERE to_char(s_order_date,'MM')<05);
----
--39) Find out if product ‘1.44 Drive’ is ordered by client and print the client_no, name to whom it is was sold.

SELECT c.client_no , c.name, p.description FROM
client_master c, product_master p, sales_order s, sales_order_details sod
WHERE (s.client_no=c.client_no AND sod.product_no=p.product_no AND sod.s_order_no=s.s_order_no) AND p.description != '1.44 Floppies';
----
--40) Find the names of clients who have placed orders worth Rs. 10000 or more.
SELECT name FROM client_master WHERE client_no IN(
	SELECT client_no FROM sales_order WHERE s_order_no IN(
    SELECT s_order_no FROM sales_order_details WHERE product_rate*qty_ordered>=10000
	)
);
----
--41) Display the order number and day o which clients placed their order.

SELECT s.s_order_no, to_char(s.s_order_date,'DD')  "Day"
FROM sales_order s, sales_order_details sod WHERE s.s_order_no=sod.s_order_no;
----
--42) Display the month (in alphabets) and date when the order must deliver.

SELECT to_char(dely_date,'month'), to_char(dely_date,'dd')
FROM sales_order;
----
--43) Display the s_order_date in the format ‘DD-MM-YY’. E.g. 12-February-1996

SELECT to_char(s_order_date,'dd-month-yyyy') FROM sales_order;
----
--44) Find the date, 15 days after today’s date.

SELECT sysdate+15 FROM dual;
----
--45) Find the number of days elapsed between today’s date and the delivery date of the orders placed by the clients.

SELECT dely_date, (sysdate-dely_date) FROM sales_order;
----
--46) Change the s_order_date of client_no ‘C00001’ to 24/07/96.

ALTER TABLE sales_order DISABLE CONSTRAINT CHECKDELYDATE;
UPDATE sales_order SET s_order_date='24-jul-1996'
WHERE client_no='C00001';
----
--47) Change the selling price of ‘1.44 Floppy Drive’ to Rs. 1150.00

UPDATE product_master SET sell_price=1150
WHERE description='1.44 Floppies';
----
--48) Delete the records with order number ‘O19001’ from the order table.

DELETE FROM sales_order WHERE s_order_no = 'O19001';
----
--49) Delete all the records having delivery date before 10th July’96

DELETE FROM sales_order WHERE dely_date>'10-JUL-1996';
----
--50) Change the city of client_no ‘C00005’ to ’Bombay’.

UPDATE client_master SET city='Bombay'WHERE client_no='C00005';
----
--51) Change the delivery date of order number ‘O10008” to 16/08/96

UPDATE sales_order SET dely_date='16-aUG-1996'
WHERE s_order_no='O10008';
----
--52) Change the bal_due of client_no ‘C00001’ to 1000

UPDATE client_master SET bal_due=1000
WHERE client_no='C00001';
----
--53) Change the cost price of ‘1.22 Floppy Drive’ to Rs. 950.00.

UPDATE product_master SET cost_price=950.00
WHERE description='1.44 Floppies'
----
















